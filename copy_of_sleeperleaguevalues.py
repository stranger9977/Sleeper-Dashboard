# -*- coding: utf-8 -*-
"""Copy of SLeeperLeagueValues.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pNRfgXmN4wYDFa2mneUTWpnWnG7AXhQZ
"""



#update with your league url
from sleeper_wrapper import League
league = League(784469172343205888)

#Bring in different dataframes to be merged later
import pandas as pd

rosters = league.get_rosters()
rosters_df = pd.DataFrame(rosters)

users = league.get_users()
users_df = pd.DataFrame(users)

draft = league.get_traded_picks()
draft_df = pd.DataFrame(draft)

picks = league.get_traded_picks()
picks_df = pd.DataFrame(picks)

rosters_df.head()

rosters_df_trim = rosters_df[['owner_id', 'roster_id', 'players',]]
users_df_trim = users_df[['user_id','display_name']]

rosters_df = rosters_df_trim.merge(users_df_trim, left_on = 'owner_id', right_on = 'user_id' )
rosters_df.head()

rosters_df = rosters_df[['display_name', 'players']]
rosters_df.head(13)

rosters_df = rosters_df.explode('players').reset_index(drop=True)
rosters_df.head()

#don't run this more than once a day! 
from sleeper_wrapper import Players

players = Players()
players = players.get_all_players()
players_df = pd.DataFrame(players)

players_df.columns



players_df = players_df.transpose()
players_df.columns

players_df = players_df[['player_id','full_name', 'position', 'age', 'team']]

rosters_df = rosters_df.merge(players_df, left_on = 'players', right_on = 'player_id' )
rosters_df.head()

df = pd.read_csv('https://raw.githubusercontent.com/dynastyprocess/data/master/files/values.csv')
df.head()

id_df = pd.read_csv('https://raw.githubusercontent.com/dynastyprocess/data/master/files/db_playerids.csv')
id_df.head()

id_df = id_df[['fantasypros_id','sleeper_id']]
values_df = pd.merge(df, id_df, how= 'left', left_on=['fp_id'], right_on=['fantasypros_id'])

rosters_df = rosters_df.loc[rosters_df['position'].isin(['QB', 'RB', 'WR', 'TE'])]
rosters_df['player_id_float'] = rosters_df['players'].astype(float)

rosters_df.dtypes

values_df.columns

values_df = values_df[['sleeper_id', 'value_1qb','value_2qb']]

rosters_df['players'] = rosters_df['players'].astype(float)

ktc_df = pd.read_csv('https://raw.githubusercontent.com/Adeiko/AdeTrades/master/KtcValues.csv')
ktc_df.head()

rosters_df = rosters_df.merge(ktc_df, left_on = 'player_id_float', right_on = 'Sleeper_ID' )
rosters_df.head()

rosters_df = rosters_df.merge(values_df, left_on='player_id_float', right_on ='sleeper_id')
rosters_df.head()

rosters_df.rename(columns = {'Value':'KTC SF','value_1qb':'DP 1QB', 'value_2qb':'DP SF', }, inplace=True )



rosters_df = rosters_df[['display_name', 'full_name', 'position', 'age', 'KTC SF', 'DP 1QB', 'DP SF']]
rosters_df.head()

# from google.colab import auth
# auth.authenticate_user()

# import gspread
# from google.auth import default
# creds, _ = default()

# gc = gspread.authorize(creds)



# from gspread_dataframe import get_as_dataframe, set_with_dataframe

# sh = gc.open_by_url('https://docs.google.com/spreadsheets/d/1itFiVincEjuxcbOdtfkwygQxVMWi8UWnPomP-J5bGMQ/edit#gid=0')
# worksheet = sh.get_worksheet(0)

# set_with_dataframe(worksheet,rosters_df)

# Commented out IPython magic to ensure Python compatibility.
#
"""
Read more about pd.set_option here:
https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.set_option.html
"""
import pandas as pd; pd.set_option('display.max_columns', None)
from matplotlib import pyplot as plt

rosters_df.info(verbose=True)

rosters_df['age']= rosters_df['age'].astype(int)
rosters_df.info(verbose=True)

from matplotlib import pyplot as plt

# sns.set_style('whitegrid')

# plt.figure(figsize=(10,10))

# sns.scatterplot(rosters_df['age'],rosters_df['DP SF'] );

# sns.scatterplot(rosters_df['age'],rosters_df['KTC SF'] );

# plt.figure(figsize=(10,10))

# sns.kdeplot(rosters_df['KTC SF'])

# plt.figure(figsize=(10,10))
# sns.distplot(rosters_df['KTC SF'])

# plt.figure(figsize=(8,18))
# sns.distplot(rosters_df['DP SF'], bins=30)

# plt.figure(figsize=(8,8))
# sns.distplot(rosters_df['age'])

import streamlit as st

import plotly.express as px
fig = px.scatter(rosters_df, x="age", y="KTC SF", hover_data=['full_name'],color='display_name', symbol='position',)
st.plotly_chart(fig, use_container_width=True)

